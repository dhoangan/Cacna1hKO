library(lme4)
library(ggplot2)
library(lmerTest)
library(dplyr)
library(MASS)
library(car)
library(MCMCglmm)
library(DHARMa)
library(glmmTMB)
data_table = read.csv("doppel_perf_fura.mean_ca.csv")
boxplot(mean_ca_steady_state ~ ctrl:pos, data_table)
pos_list = unique(data_table["pos"])[[1]]
df_mean_LMM_TMB = data.frame()
data_table_n = subset(data_table, ctrl=="n")
mean_per_pos = aggregate(data_table_n$mean_ca_steady_state, list(data_table_n$pos), FUN=mean)
count_per_pos= aggregate(data_table_n$mean_ca_steady_state, list(data_table_n$pos), FUN=length)
library(lme4)
library(ggplot2)
library(lmerTest)
library(dplyr)
library(MASS)
library(car)
library(MCMCglmm)
library(DHARMa)
library(glmmTMB)
data_table = read.csv("doppel_perf_fura.mean_ca.csv")
boxplot(mean_ca_steady_state ~ ctrl:pos, data_table)
pos_list = unique(data_table["pos"])[[1]]
df_mean_LMM_TMB = data.frame()
data_table_n = subset(data_table, ctrl=="n")
mean_per_pos = aggregate(data_table_n$mean_ca_steady_state, list(data_table_n$pos), FUN=mean)
count_per_pos= aggregate(data_table_n$mean_ca_steady_state, list(data_table_n$pos), FUN=length)
# Find the correct underlying probability distribution
data_subset = subset(data_table, pos == 1)
ggplot(data_subset, aes(mean_ca_steady_state, fill=ctrl)) + geom_histogram()
m1.norm <- glmmTMB(mean_ca_steady_state ~ ctrl + (1|recording),
data = data_subset)
m1.lnorm <- glmmTMB(mean_ca_steady_state ~ ctrl + (1|recording),
family = gaussian(link="log"), data = data_table)
m1.gamma <- glmmTMB(mean_ca_steady_state ~ ctrl + (1|recording),
family = Gamma(link="log"), data = data_table)
# Selcet one of the distributions
res <- simulateResiduals(m1.norm, plot = T)
res <- simulateResiduals(m1.lnorm, plot = T)
res <- simulateResiduals(m1.gamma, plot = T)
for (p in pos_list){
print(p)
data_subset = subset(data_table, pos==p)
# reduced base model
model.base <- glmmTMB(mean_ca_steady_state ~ 1 + (1|recording),
data = data_subset)
# full model
model <- glmmTMB(mean_ca_steady_state ~ ctrl + (1|recording),
data = data_subset)
anova_result = anova(model.base, model)
print(anova_result)
df_con = data.frame(p,anova_result$`Pr(>Chisq)`[2])
df_mean_LMM_TMB = rbind(df_mean_LMM_TMB, df_con)
}
# date
today = Sys.Date()
print(today)
today = format(today, format="%y%m%d")
View(mean_per_pos)
View(res)
View(df_mean_LMM_TMB)
